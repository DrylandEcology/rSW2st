% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_netCDF.R
\name{create_empty_netCDF_file}
\alias{create_empty_netCDF_file}
\title{Create a structured, empty netCDF file}
\usage{
create_empty_netCDF_file(
  data,
  has_T_timeAxis = FALSE,
  has_Z_verticalAxis = FALSE,
  time_bounds,
  vert_bounds,
  var_attributes,
  time_attributes,
  vertical_attributes,
  global_attributes,
  locations,
  grid = NULL,
  is_gridded = TRUE,
  crs_attributes = list(crs_wkt = sf::st_crs("EPSG:4326")$Wkt, grid_mapping_name =
    "latitude_longitude", longitude_of_prime_meridian = 0, semi_major_axis = 6378137,
    inverse_flattening = 298.257223563),
  xy_attributes = list(name = c("lon", "lat"), standard_name = c("longitude",
    "latitude"), long_name = c("Longitude", "Latitude"), units = c("degrees_east",
    "degrees_north")),
  type_timeaxis = c("timeseries", "climatology"),
  file,
  force_v4 = TRUE,
  overwrite = FALSE,
  verbose = FALSE
)
}
\arguments{
\item{data}{A numeric array.}

\item{has_T_timeAxis}{A logical value. Indicates that the netCDF created will
have a third, time dimension.}

\item{has_Z_verticalAxis}{A logical value. Indicates that the netCDF created
will have a vertical (e.g. soil profile depths) dimension.
If \var{has_T_timeAxis} is set to \code{FALSE} then the Z axis will be
the third dimension. If \var{has_T_timeAxis} is set to \code{TRUE} then
the Z axis will be the fourth dimension.}

\item{time_bounds}{A numeric vector that continuously lists the lower and
upper bounds of each time dimension value. In the absence of a time
dimension, this argument can be used to define the calculation period of
the variable(s).}

\item{vert_bounds}{A numeric vector that continuously lists the lower and
upper bounds of each vertical dimension value.}

\item{var_attributes}{A list of named character strings defining the
variables of the netCDF.}

\item{time_attributes}{A list of named character strings defining the time
dimension of the netCDF.}

\item{vertical_attributes}{A list of named character strings defining the
vertical dimension of the netCDF.}

\item{global_attributes}{A list of named character strings defining the
global attributes of the netCDF.}

\item{locations}{A SpatialPoints object or a matrix or data.frame with two
columns containing long and lat values. Data must be organized by (1) long,
(2) lat.}

\item{grid}{filename (character). File containing the grid information
(i.e. resolution, extent, locations) of the data. Supported file types are
the 'native' raster package format and those that can be read via rgdal.}

\item{is_gridded}{A logical value. Represents whether the location data is on
a regular grid or not.}

\item{crs_attributes}{A list of named character string defining the CRS
of the netCDF.}

\item{type_timeaxis}{A character string. The type of the time axis, i.e.,
a time series or a climatological time axis.}

\item{file}{A character string. The file path of the netCDF file to be
created.}

\item{force_v4}{A logical value. Force version 4 of netCDF.}

\item{overwrite}{A logical value. If \code{TRUE}, file will be overwritten
if it already exists.}
}
\value{
This function is used for the side-effect of creating a file.
}
\description{
This function creates a structured netCDF following CF 1.8 standards with
 metadata from an array, but without data.
}
\details{
The user provides an array and specifies spatial information,
 dimensionality, and metadata in order to create an empty netCDF.

 The netCDF always includes at least two dimensions: Latitude and Longitude.
 Information about these dimensions are taken from the \var{locations},
 \var{isGridded}, \var{crs_attributes}, and \var{grid} arguments. One of
 \var{locations} or \var{grid} needs to be provided, but not both.

 Additional dimensions are added by setting \var{has_T_timeAxis} and/or
 \var{has_Z_verticalAxis} to \code{TRUE}. If both flags are set to
 \code{FALSE} then the netCDF is two dimensions with one or more variables.
 The number of variables is set in the \var{var_attributes} argument. If
 either \var{has_T_timeAxis} \emph{or} \var{has_Z_verticalAxis} is set to
 \code{TRUE} then a third dimension is added to the netCDF. If \emph{both}
 \var{has_T_timeAxis} and \var{has_Z_verticalAxis} are set to TRUE, then the
 netCDF will have four dimensions, with time as the third, and vertical as
 the fourth. Information about these dimensions is set in the respective
 \var{bounds} and \var{attributes} arguments. \var{has_T_timeAxis} and/or
 \var{has_Z_verticalAxis} is set to \code{TRUE} the netCDF can \emph{only}
 have one variable.

 The \var{data} object is used to set up the size and dataType in the netCDF.
 The metadata needs to match the data. This object contains the data that you
 intend to populate the netCDF with. The array should be set up so that each
 row is a site's info, and each column is a value for variables, time or
 vertical. If the netCDF is 4d (time and vertical == \code{TRUE}, then need
 to have a 3-d data array, where each additional dimension contains values
 for each vertical horizon.

 For variable names, Use CMIP6 standard variable names where available.
 The variable names are contained in the
 [CMIP6-cmor-tables]
 (https://github.com/PCMDI/cmip6-cmor-tables/tree/master/Tables).
}
\examples{
#############################################################################
# example - create an empty netCDF with a three dimensions (lat, long, time)
#############################################################################

# create dummy data ---------------------------------------------------------

someData <- rnorm(100, 7, 30)
data <- array(someData, c(10, 10))

locations <- data.frame(X_WGS84 = c(rep(-124.5938, 5), rep(-124.5312, 5)),
                        Y_WGS84 = rep(c(47.90625, 47.96875, 48.03125,
                                      48.09375, 48.15625), 2))

annual_time_bounds <- c(43737, 44102, 44102, 44467, 44467, 44832, 44832,
                        45197, 45197, 45563, 45563, 45928, 45928, 46293,
                        46293, 46658, 46658, 47024, 47024, 47389)

outFileName <- "dummynetcdf.nc"

# define attributes ---------------------------------------------------------

# time attribute
time_attributes <- list(
   units = "days since 1900-01-01",
   calendar = "standard",
   unlim = "TRUE",
   vals = c(43554, 43920, 44285, 44650, 45015, 45381, 45746, 46111, 46476,
            46842)# mid point of year
   )

# variable attributes
var_attributes <- list(
   name = "JulyTemp",
   long_name = "Annual Mean July Temperature",
   units = "Celsius",
   description = "example data!",
   grid_mapping = "crs: lat lon"
   )

# CRS attributes
crs_attributes <- list(
  crs_wkt = sp::wkt(sp::CRS(SRS_string = "EPSG:4326")),
  longitude_of_prime_meridian = 0.0,
  semi_major_axis = 6378137.0,
  inverse_flattening = 298.257223563
)

# global attributes
global_attributes <- list(
   title = "",
   institution = "Southwest Biological Science Center,
                  U.S. Geological Survey",
   description = "how this data was made",
   source = paste(
     "SOILWAT2 (v4.2.0);",
     "rSOILWAT2 (v2.3.2);",
     "rSFSW2 (v3.1.2)"
   ),
   source_id = "SOILWAT2",
   realm = "land",
   parent_mip_era = "CMIP5",
   parent_experiment_id = "RCP45",
   parent_source = "CanESM2",
   parent_variant_label = "r1i1p1",
   product = "model-output",
   projection = "Geographic",
   grid = "WGS84",
   grid_label = "gn",
   nominal_resolution = "10 km",
   further_info_url = "https://github.com/DrylandEcology/",
   contact = "you@email.com"
   )

# run function -------------------------------------------------------------
create_empty_netCDF_file(
     data = data,
     has_T_timeAxis = TRUE,
     has_Z_verticalAxis = FALSE,
     time_bounds = annual_time_bounds,
     vert_bounds = NULL,
     var_attributes = var_attributes,
     time_attributes  = time_attributes,
     vertical_attributes = NULL,
     global_attributes = global_attributes,
     crs_attributes = crs_attributes,
     is_gridded = TRUE,
     locations = locations,
     file = outFileName,
     force_v4 = TRUE,
     overwrite = TRUE
   )

unlink(outFileName)

}
\seealso{
\code{populate_netcdf_from_array}

\url{http://cfconventions.org/cf-conventions/cf-conventions.html}
}
